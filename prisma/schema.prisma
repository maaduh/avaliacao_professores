// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
  senha String 
  departamento String
  curso String
  foto Bytes?
  createdt DateTime @default(now())
  updateddt DateTime @updatedAt

  avaliacoes   avaliacao[]     @relation("UsuarioAvaliacoes")
  comentarios  comments[]      @relation("UsuarioComentarios")

  @@map("usuarios")
}

model comments {
  id    Int     @id @default(autoincrement())
  userID  Int
  avalID  Int
  conteudo String
  createdt DateTime @default(now())
  updateddt DateTime @updatedAt

  usuario   User      @relation(fields: [userID], references: [id], name: "UsuarioComentarios")
  avaliacao avaliacao @relation(fields: [avalID], references: [id], name: "AvaliacaoComentarios")

  @@map("comentarios")
  
  }

model professor {
  id  Int   @id @default(autoincrement())
  nome String
  departamento  String
  diciplinaID Int
  createdt DateTime @default(now())
  updateddt DateTime @updatedAt

  avaliacoes  avaliacao[] @relation("ProfessorAvaliacoes")

  @@map("professores")
}

model avaliacao {
  id  Int   @id @default(autoincrement())
  usuarioID Int
  diciplinaID Int
  professorID Int
  conteudo String
  createdt DateTime @default(now())
  updateddt DateTime @updatedAt

  comentarios comments[]    @relation("AvaliacaoComentarios")
  usuario      User        @relation(fields: [usuarioID], references: [id], name: "UsuarioAvaliacoes")
  professor    professor   @relation(fields: [professorID], references: [id], name: "ProfessorAvaliacoes") 
}